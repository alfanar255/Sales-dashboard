import streamlit as st
import pandas as pd
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# ุฅุนุฏุงุฏ ุงููุตูู ุฅูู Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = ServiceAccountCredentials.from_json_keyfile_name("service_account.json", scope)
client = gspread.authorize(credentials)

# ุชุญููู ุงูุจูุงูุงุช
spreadsheet = client.open_by_url("https://docs.google.com/spreadsheets/d/1PBhvZlhYwUVsIBAyLzpOvwixlyUBHZA17lgGUEdH72Q")

# ุชุญููู ุงูุฌุฏุงูู
sales_df = pd.DataFrame(spreadsheet.worksheet("Sales").get_all_records())
collections_df = pd.DataFrame(spreadsheet.worksheet("Collections").get_all_records())
returns_df = pd.DataFrame(spreadsheet.worksheet("Returns").get_all_records())
targets_df = pd.DataFrame(spreadsheet.worksheet("Targets").get_all_records())

# ุชุญููู ุงูุฃุนูุฏุฉ ููุชูุงุฑูุฎ ูุฃุฑูุงู
for df in [sales_df, collections_df, returns_df]:
    df['ุงูุชุงุฑูุฎ'] = pd.to_datetime(df['ุงูุชุงุฑูุฎ'])

today = pd.to_datetime(datetime.today().date())
month = today.month

# ุญุณุงุจ ุงููุจูุนุงุช ุงูุตุงููุฉ (ุฎุตู ุงููุฑุชุฌุนุงุช)
returns_grouped = returns_df.groupby('ุฑูู ุงููุงุชูุฑุฉ ุงููุฑุชุฌุนุฉ')['ูููุฉ ุงููุฑุชุฌุน'].sum()
sales_df['ุตุงูู ุงููุงุชูุฑุฉ'] = sales_df.apply(lambda row: row['ูููุฉ ุงููุงุชูุฑุฉ'] - returns_grouped.get(row['ุฑูู ุงููุงุชูุฑุฉ'], 0), axis=1)

# ูุงุฌูุฉ Streamlit
st.set_page_config(page_title="ููุญุฉ ูุจูุนุงุช ุงูููุงุฑ", layout="wide")
st.title("๐ ููุญุฉ ูุชุงุจุนุฉ ุงููุจูุนุงุช ูุงูุชุญุตูู โ ุดุฑูุฉ ุงูููุงุฑ")

# ูุจูุนุงุช ูุชุญุตูู ุฅุฌูุงููุฉ
total_sales = sales_df['ุตุงูู ุงููุงุชูุฑุฉ'].sum()
monthly_sales = sales_df[sales_df['ุงูุชุงุฑูุฎ'].dt.month == month]['ุตุงูู ุงููุงุชูุฑุฉ'].sum()
daily_sales = sales_df[sales_df['ุงูุชุงุฑูุฎ'].dt.date == today.date()]['ุตุงูู ุงููุงุชูุฑุฉ'].sum()

st.subheader("ูุธุฑุฉ ุนุงูุฉ ุนูู ุงูุดุฑูุฉ")
st.metric("๐ฆ ุฅุฌูุงูู ุตุงูู ุงููุจูุนุงุช", f"{total_sales:,.0f} ุฑูุงู")
st.metric("๐๏ธ ูุจูุนุงุช ูุฐุง ุงูุดูุฑ", f"{monthly_sales:,.0f} ุฑูุงู")
st.metric("๐ ูุจูุนุงุช ุงูููู", f"{daily_sales:,.0f} ุฑูุงู")

st.markdown("---")

# ุงุฎุชูุงุฑ ููุฏูุจ
salespeople = targets_df['ุงุณู ุงูููุฏูุจ'].unique()
selected_rep = st.selectbox("ุงุฎุชุฑ ุงูููุฏูุจ ูุนุฑุถ ุชูุงุตููู", salespeople)

rep_sales = sales_df[sales_df['ุงุณู ุงูููุฏูุจ'] == selected_rep]
rep_returns = returns_df[returns_df['ุงุณู ุงูููุฏูุจ'] == selected_rep]
rep_collections = collections_df[collections_df['ุงุณู ุงูููุฏูุจ'] == selected_rep]
rep_target = targets_df[targets_df['ุงุณู ุงูููุฏูุจ'] == selected_rep].iloc[0]

# ุตุงูู ุงููุจูุนุงุช ูุงูุชุญุตูู ููููุฏูุจ
rep_total_sales = rep_sales['ุตุงูู ุงููุงุชูุฑุฉ'].sum()
rep_monthly_sales = rep_sales[rep_sales['ุงูุชุงุฑูุฎ'].dt.month == month]['ุตุงูู ุงููุงุชูุฑุฉ'].sum()
rep_daily_sales = rep_sales[rep_sales['ุงูุชุงุฑูุฎ'].dt.date == today.date()]['ุตุงูู ุงููุงุชูุฑุฉ'].sum()
rep_total_returns = rep_returns['ูููุฉ ุงููุฑุชุฌุน'].sum()

rep_total_collections = rep_collections['ูููุฉ ุงูุชุญุตูู'].sum()
rep_monthly_collections = rep_collections[rep_collections['ุงูุชุงุฑูุฎ'].dt.month == month]['ูููุฉ ุงูุชุญุตูู'].sum()
rep_daily_collections = rep_collections[rep_collections['ุงูุชุงุฑูุฎ'].dt.date == today.date()]['ูููุฉ ุงูุชุญุตูู'].sum()

# ูุณุจ ุงูุชุงุฑุฌุช
def calc_percent(actual, target):
    return f"{(actual / target * 100):.1f}%" if target > 0 else "-"

st.subheader(f"ุชูุงุตูู ุงูููุฏูุจ: {selected_rep}")

col1, col2 = st.columns(2)

with col1:
    st.metric("๐ผ ุตุงูู ุงููุจูุนุงุช ุงููููุฉ", f"{rep_total_sales:,.0f} ุฑูุงู")
    st.metric("๐ ุตุงูู ูุจูุนุงุช ุงูููู", f"{rep_daily_sales:,.0f} ุฑูุงู")
    st.metric("๐ ุตุงูู ูุจูุนุงุช ุงูุดูุฑ", f"{rep_monthly_sales:,.0f} ุฑูุงู")

with col2:
    st.metric("๐ฐ ุงูุชุญุตูู ุงูููู", f"{rep_total_collections:,.0f} ุฑูุงู")
    st.metric("๐๏ธ ุชุญุตูู ุงูููู", f"{rep_daily_collections:,.0f} ุฑูุงู")
    st.metric("๐ ุชุญุตูู ุงูุดูุฑ", f"{rep_monthly_collections:,.0f} ุฑูุงู")

st.markdown("### ๐ฏ ูุณุจุฉ ุงูุชุงุฑุฌุช")

st.write(f"๐ฉ ูุณุจุฉ ูุจูุนุงุช ุงูููู: **{calc_percent(rep_daily_sales, rep_target['ุชุงุฑุฌุช ูุจูุนุงุช ูููู'])}**")
st.write(f"๐จ ูุณุจุฉ ูุจูุนุงุช ุงูุดูุฑ: **{calc_percent(rep_monthly_sales, rep_target['ุชุงุฑุฌุช ูุจูุนุงุช ุดูุฑู'])}**")
st.write(f"๐ฉ ูุณุจุฉ ุชุญุตูู ุงูููู: **{calc_percent(rep_daily_collections, rep_target['ุชุงุฑุฌุช ุชุญุตูู ูููู'])}**")
st.write(f"๐จ ูุณุจุฉ ุชุญุตูู ุงูุดูุฑ: **{calc_percent(rep_monthly_collections, rep_target['ุชุงุฑุฌุช ุชุญุตูู ุดูุฑู'])}**")

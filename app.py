import streamlit as st
import pandas as pd
from datetime import datetime
from streamlit_autorefresh import st_autorefresh

# ุฅุนุฏุงุฏ ุงูุตูุญุฉ
st.set_page_config(layout="wide", page_title="ููุญุฉ ูุจูุนุงุช ุงูููุงุฑ")

# ุชุญุฏูุซ ุชููุงุฆู ูู 60 ุซุงููุฉ
refresh_interval = 60 * 1000
count = st_autorefresh(interval=refresh_interval, key="refresh")

# ุชุญููู ุงูุจูุงูุงุช ูู Google Sheets ูุน ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก
@st.cache_data(ttl=60)
def load_data():
    url = "https://docs.google.com/spreadsheets/d/e/2PACX-1vRz88_P5wG3NAxD1VXqDAAHU0Jm-lrr-lk8Ze1KO8p8iEIYiWw7PoHAvwhEYLs5YyzAbZt-JKd1pwkF/pub?gid=0&single=true&output=csv"
    df = pd.read_csv(url, on_bad_lines='skip')
    df['ุงูุชุงุฑูุฎ'] = pd.to_datetime(df['ุงูุชุงุฑูุฎ'], errors='coerce')
    df = df.dropna(subset=['ุงูุชุงุฑูุฎ'])
    for col in ['ุงููุจูุนุงุช', 'ุงูุชุญุตูู', 'ุชุงุฑูุช ุงููุจูุนุงุช', 'ุชุงุฑูุช ุงูุชุญุตูู']:
        df[col] = pd.to_numeric(df[col], errors='coerce').fillna(0)
    return df

# ุชุญููู ุงูุจูุงูุงุช
df = load_data()

# ุงูุดุนุงุฑ ูุงูุนููุงู
logo_url = "https://raw.githubusercontent.com/alfanar255/Sales-dashboard/main/company_logo2.png"
st.image(logo_url, width=120)

st.markdown("""
    <div style="text-align: center; margin-top: -60px;">
        <h1 style='font-size: 50px; color: #0059b3;'>ุดุฑูุฉ ุงูููุงุฑ ูุชูุฒูุน ุงูุฃุฏููุฉ</h1>
        <h4 style='color: gray;'>ููุญุฉ ูุชุงุจุนุฉ ุงููุจูุนุงุช ูุงูุชุญุตูู</h4>
    </div>
""", unsafe_allow_html=True)

st.markdown("---")

# ุชุฌููุฒ ุงูุชุงุฑูุฎ
today = pd.Timestamp.today().normalize()
df['ุงูููู'] = df['ุงูุชุงุฑูุฎ'].dt.date

# ุญุณุงุจ ุงูุฅุฌูุงููุงุช
sales_today = df[df['ุงูููู'] == today.date()]['ุงููุจูุนุงุช'].sum()
sales_month = df[df['ุงูุชุงุฑูุฎ'].dt.month == today.month]['ุงููุจูุนุงุช'].sum()
total_sales = df['ุงููุจูุนุงุช'].sum()

# ุนุฑุถ ุงูุฅุฌูุงููุงุช ุงูุฑุฆูุณูุฉ
st.markdown(f"""
    <div class="metric-container">
        <div class="metric-box">
            <div class="metric-title">๐ ูุจูุนุงุช ุงูููู</div>
            <div class="metric-value">{sales_today:,.0f} ุฌููู</div>
        </div>
        <div class="metric-box">
            <div class="metric-title">๐๏ธ ูุจูุนุงุช ุงูุดูุฑ</div>
            <div class="metric-value">{sales_month:,.0f} ุฌููู</div>
        </div>
        <div class="metric-box">
            <div class="metric-title">๐ฐ ุฅุฌูุงูู ุงููุจูุนุงุช</div>
            <div class="metric-value">{total_sales:,.0f} ุฌููู</div>
        </div>
    </div>
""", unsafe_allow_html=True)

st.markdown("---")

# ุชูุงุตูู ุงูููุงุฏูุจ
grouped = df.groupby('ุงูููุฏูุจ')
result = []

for ููุฏูุจ, data in grouped:
    sales_today = data[data['ุงูููู'] == today.date()]['ุงููุจูุนุงุช'].sum()
    collection_today = data[data['ุงูููู'] == today.date()]['ุงูุชุญุตูู'].sum()
    sales_month = data[data['ุงูุชุงุฑูุฎ'].dt.month == today.month]['ุงููุจูุนุงุช'].sum()
    collection_month = data[data['ุงูุชุงุฑูุฎ'].dt.month == today.month]['ุงูุชุญุตูู'].sum()
    sales_target = data['ุชุงุฑูุช ุงููุจูุนุงุช'].max()
    collection_target = data['ุชุงุฑูุช ุงูุชุญุตูู'].max()

    sales_ach = (sales_month / sales_target * 100) if sales_target else 0
    collection_ach = (collection_month / collection_target * 100) if collection_target else 0

    result.append({
        'ุงูููุฏูุจ': ููุฏูุจ,
        'ูุจูุนุงุช ุงูููู': sales_today,
        'ุชุญุตูู ุงูููู': collection_today,
        'ูุจูุนุงุช ุงูุดูุฑ': sales_month,
        'ุชุญุตูู ุงูุดูุฑ': collection_month,
        'ุชุงุฑูุช ุงููุจูุนุงุช': sales_target,
        'ุชุงุฑูุช ุงูุชุญุตูู': collection_target,
        'ูุณุจุฉ ุชุญููู ุงููุจูุนุงุช (%)': sales_ach,
        'ูุณุจุฉ ุชุญููู ุงูุชุญุตูู (%)': collection_ach
    })

result_df = pd.DataFrame(result)

# ุนุฑุถ ุฌุฏูู ุงูููุงุฏูุจ
st.subheader("ุชูุงุตูู ุงููุจูุนุงุช ูุงูุชุญุตูู ุญุณุจ ุงูููุฏูุจ")
st.dataframe(result_df.style.format({
    'ูุจูุนุงุช ุงูููู': '{:,.0f} ุฌููู',
    'ุชุญุตูู ุงูููู': '{:,.0f} ุฌููู',
    'ูุจูุนุงุช ุงูุดูุฑ': '{:,.0f} ุฌููู',
    'ุชุญุตูู ุงูุดูุฑ': '{:,.0f} ุฌููู',
    'ุชุงุฑูุช ุงููุจูุนุงุช': '{:,.0f} ุฌููู',
    'ุชุงุฑูุช ุงูุชุญุตูู': '{:,.0f} ุฌููู',
    'ูุณุจุฉ ุชุญููู ุงููุจูุนุงุช (%)': '{:.1f} %',
    'ูุณุจุฉ ุชุญููู ุงูุชุญุตูู (%)': '{:.1f} %'
}), use_container_width=True)

# ุชูุณูู CSS
st.markdown("""
    <style>
    .metric-container {
        display: flex;
        justify-content: space-around;
        margin-top: 20px;
        margin-bottom: 20px;
    }
    .metric-box {
        text-align: center;
        font-weight: bold;
        color: #0066cc;
    }
    .metric-title {
        font-size: 24px;
        margin-bottom: 5px;
    }
    .metric-value {
        font-size: 30px !important;
    }
    .stDataFrame th, .stDataFrame td {
        text-align: center !important;
    }
    </style>
""", unsafe_allow_html=True)
